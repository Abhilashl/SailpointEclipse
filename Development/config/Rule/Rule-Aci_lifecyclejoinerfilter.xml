<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="aci_LifeCycleJoinerFilter" type="IdentitySelector">
  <Description>This rule is used to select an Identity that is related to the given Identity</Description>
  <Signature returnType="boolean">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The identity.
        </Description>
      </Argument>
      <Argument name="roleName" type="String">
        <Description>
          The name of the sailpoint.object.Bundle (role) that is being selected for the Identity. 
          If roles are not applicable to this Identity selection, this value will be void.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="success">
        <Description>
            True if the selection was successful; false otherwise.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[/*
    Rule:  aci_LifeCycleJoinerFilter
    Author:  Steve Nuffer
	
    Date:  November 7, 2016
    Version:  1.0

*/
import org.apache.log4j.Logger;
import sailpoint.object.*;
import sailpoint.tools.Util;

Logger logger = Logger.getLogger("com.aci.aci_LifeCycleJoinerFilter");
logger.debug("aci_LifeCycleJoinerFilter");
String identityPerType = identity.getAttribute("personType");
String identityCompany = identity.getAttribute("company");

if ( !Util.isNotNullOrEmpty(identityPerType) ) identityPerType = "";
if ( !Util.isNotNullOrEmpty(identityCompany) ) identityCompany = "";

if ( identity.isCorrelated() ) {
    // New Identity and it's authoritative
    logger.debug("Fusion Joiner WF:" + identity.getDisplayName() + "  Include Identity");
    
    // Is this a Fiserv Contingent
    if ( identityPerType.equalsIgnoreCase("contingent worker") && identityCompany.equalsIgnoreCase("fiserv")  ) { 
        // Fiserv Contingent
        logger.debug("    Fiserv contingent exclusion");
        return false;
    } else {
        return true;
    }
} 

logger.debug("Fusion Joiner WF:" + identity.getDisplayName() + "  Exclude Identity");
return false]]></Source>
</Rule>
