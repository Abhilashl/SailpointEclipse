<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="aci_CombinePhoneAttr" type="IdentityAttribute">
  <Description>Identity attribute rules are used when the value is not simply a copy of an application account attribute value.  A transformation may be necessary on the account attribute, or several account attributes may need to be combined to produce the identity attribute.

This rule can be called in two ways: as a global mapping rule and an application mapping rule.  A global mapping rule is called whenever the identity is refreshed.  The rule can look at any account attributes.  An application mapping rule is called only when the identity contains an account link for that application, this link is passed in the "link" argument which is not passed in global mapping rules.</Description>
  <Signature returnType="String"/>
  <Source><![CDATA[/*
    Rule:  aci_CombinePhoneAttr
    
    Author:  Steve Nuffer
	
    Date:  June 5, 2016
    Version:  1.0

*/
import org.apache.log4j.Logger; 
import sailpoint.object.*;
import sailpoint.tools.Util;

Logger logger = Logger.getLogger("com.aci.rule.aci_CombinePhoneAttr");

String countryCode = link.getAttribute("COUNTRY_CODE");
String areaCode= link.getAttribute("AREA_CODE");
String phoneNumber= link.getAttribute("PHONE_NUMBER");

if ( Util.isNotNullOrEmpty(countryCode) ) 
    countryCode = countryCode.replaceAll("[^0-9]", "");
else
    countryCode = "";
    
if ( Util.isNotNullOrEmpty(areaCode) ) 
    areaCode = areaCode.replaceAll("[^0-9]", "");
else
    areaCode = "";
    
if ( Util.isNotNullOrEmpty(phoneNumber) ) 
    phoneNumber = phoneNumber.replaceAll("[^0-9]", "");
else
    phoneNumber = "";
    
String telePhoneNumber = "+" + countryCode  + areaCode + phoneNumber;     
logger.debug("telePhoneNumber=" +  telePhoneNumber );

// Check for only the +
if ( telePhoneNumber.equals("+")  ) {
    return "";
}  else {
    return telePhoneNumber;
}]]></Source>
</Rule>
